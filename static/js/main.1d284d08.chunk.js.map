{"version":3,"sources":["useFetchJobs.js","Job.js","JobsPagination.js","SearchForm.js","App.js","index.js"],"names":["ACTIONS","url","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","classNAme","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken","axios","CancelToken","get","token","markdown","then","res","data","catch","e","isCancel","cancelToken1","length","cancel","useFetchJobs","Container","textAlign","param","target","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d284d08.chunk.js","sourcesContent":["// Creating a hook for extracting the API\nimport { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ACTIONS = {\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error',\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n};\n\n\nconst url = \"/positions.json\";\n\nfunction reducer(state, action) {\n\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return {\n                loading: true,\n                jobs: []\n            }\n\n        case ACTIONS.GET_DATA:\n            return {\n                ...state,\n                loading: false,\n                jobs: action.payload.jobs,\n                error: ''\n            }\n\n        case ACTIONS.ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error,\n                jobs: []\n            }\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n            return{\n                ...state,\n                hasNextPage : action.payload.hasNextPage\n            }\n\n        default:\n            return state\n    }\n\n}\n\n\nexport default function useFetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true, })\n\n    useEffect(() => {\n\n        const cancelToken = axios.CancelToken.source()\n\n        dispatch({ type: ACTIONS.MAKE_REQUEST })\n        axios.get(url, {\n            cancelToken: cancelToken.token,\n            params: { markdown: true, page: page, ...params }\n        })\n\n            .then(res => {\n                dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } })\n            })\n            .catch(e => {\n                if(axios.isCancel(e)) return\n                dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\n            })\n           \n            // For checking Next Page ------------\n\n            const cancelToken1 = axios.CancelToken.source()\n            axios.get(url, {\n                cancelToken1: cancelToken1.token,\n                params: { markdown: true, page: page+1, ...params }\n            })\n    \n                .then(res => {\n                    dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE , payload: { hasNextPage : res.data.length !== 0 } })\n                })\n                .catch(e => {\n                    if(axios.isCancel(e)) return\n                    dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\n                })\n\n\n        return () => {\n            cancelToken.cancel()\n            cancelToken1.cancel()\n        }\n    }, [params, page])\n\n    return state\n}","import React,{useState} from 'react'\nimport {Card,Badge, Button, Collapse} from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function Job({job}) {\n\n    const [open,setOpen]= useState(false);\n    return (\n        <Card className=\"mb-3\">\n        <Card.Body>\n            <div className=\"d-flex justify-content-between \">\n                <div>\n                    <Card.Title>\n                        {job.title} - <span className=\"text-muted \n                        font-weight-light\">{job.company}</span>\n                    </Card.Title>\n                    <Card.Subtitle className=\"text-muted mb-2\">\n                        {new Date(job.created_at).toLocaleDateString()}\n                    </Card.Subtitle>\n                    <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\n                    <Badge variant=\"secondary\">{job.location}</Badge>\n                    <div style={{wordBreak: 'break-all'}}>\n                        <ReactMarkdown source={job.how_to_apply} />\n                    </div>\n                </div>\n                <img className=\"d-sm-none d-md-block \" height=\"50\" alt={job.company} src={job.company_logo} />\n            </div>\n            <Card.Text>\n                <Button onClick={ () => \n                setOpen(prevOpen => !prevOpen)\n                } variant=\"primary\">\n                    {open ? 'Hide Deatails' : 'View Details'}\n                </Button>\n            </Card.Text>\n            <Collapse in={open}>\n            <div className=\"mt-4\">\n                <ReactMarkdown source={job.description} />\n            </div>\n            </Collapse>\n        </Card.Body>\n            \n        </Card>\n    )\n}\n","import React from 'react'\nimport {Pagination} from 'react-bootstrap'\n\nexport default function JobsPagination({page, setPage ,hasNextPage}) {\n\n    function adjustPage(amount){\n        setPage(prevPage => prevPage+amount)\n    }\n\n    return (\n        <div>\n            <Pagination>\n                { page!== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\n                { page!==1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item> }\n                { page>2 && <Pagination.Ellipsis/> }\n                { page>2 && <Pagination.Item onClick={() => adjustPage(-1)} >{page-1}</Pagination.Item>}\n                 <Pagination.Item active>{page}</Pagination.Item>\n                { hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page+1}</Pagination.Item> }\n                { hasNextPage && <Pagination.Next onClick={() => adjustPage(1)}/>}\n            </Pagination>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Form,Col} from 'react-bootstrap'\n\nexport default function SearchForm({params, onParamChange}) {\n    return (\n        <div>\n            <Form className=\"mb-4\">\n                <Form.Row className=\"align-items-end\" >\n                    <Form.Group as={Col}>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control onChange={onParamChange} value=\n                        {params.description} name=\"description\" type=\"text\" />\n                    </Form.Group>\n                    <Form.Group as={Col}>\n                        <Form.Label>Location</Form.Label>\n                        <Form.Control onChange={onParamChange} value=\n                        {params.location} name=\"location\" type=\"text\" />\n                    </Form.Group>\n                    <Form.Group as={Col} xs=\"auto\" classNAme=\"ml-2\" >\n                        <Form.Check onChange={onParamChange} value={params.full_time} \n                        name=\"full_time\" id=\"full_time\" label=\"Only Full Time\"\n                        type=\"checkbox\"  />\n\n                    </Form.Group>\n                </Form.Row>\n            </Form>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport useFetchJobs from './useFetchJobs'\nimport { Container } from 'react-bootstrap'\nimport Job from './Job'\nimport JobsPagination from './JobsPagination';\nimport SearchForm from './SearchForm';\n\nfunction App() {\n\n  const [params, setParams] = useState({})\n  const [page, setPage] = useState(1)\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page)\n\n  function handleParamChange(e) {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams(prevParams => {\n      return { ...prevParams, [param]: value }\n    })\n  }\n\n  return (\n\n    <Container className=\"my-4\" >\n      <h1 className=\"mb-4\" style={{textAlign: \"center\" }}>Jobs For You</h1>\n       <SearchForm params={params} onParamChange={handleParamChange} /> \n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error ... Try Again</h1>}\n      {jobs.map(job => {\n        return (\n          <Job key={job.id} job={job} />\n        )\n      })}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}